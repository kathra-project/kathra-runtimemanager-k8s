// Code generated by go-swagger; DO NOT EDIT.

package container_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "gitlab.com/kathra/kathra/kathra-services/kathra-runtimemanager/kathra-runtimemanager-go/kathra-runtimemanager-k8s/models"
)

// GetRuntimeContainerOKCode is the HTTP code returned for type GetRuntimeContainerOK
const GetRuntimeContainerOKCode int = 200

/*GetRuntimeContainerOK RuntimeContainer from RuntimeAppInstance

swagger:response getRuntimeContainerOK
*/
type GetRuntimeContainerOK struct {

	/*
	  In: Body
	*/
	Payload []*models.RuntimeContainer `json:"body,omitempty"`
}

// NewGetRuntimeContainerOK creates GetRuntimeContainerOK with default headers values
func NewGetRuntimeContainerOK() *GetRuntimeContainerOK {

	return &GetRuntimeContainerOK{}
}

// WithPayload adds the payload to the get runtime container o k response
func (o *GetRuntimeContainerOK) WithPayload(payload []*models.RuntimeContainer) *GetRuntimeContainerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get runtime container o k response
func (o *GetRuntimeContainerOK) SetPayload(payload []*models.RuntimeContainer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuntimeContainerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.RuntimeContainer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetRuntimeContainerBadRequestCode is the HTTP code returned for type GetRuntimeContainerBadRequest
const GetRuntimeContainerBadRequestCode int = 400

/*GetRuntimeContainerBadRequest Bad request

swagger:response getRuntimeContainerBadRequest
*/
type GetRuntimeContainerBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetRuntimeContainerBadRequest creates GetRuntimeContainerBadRequest with default headers values
func NewGetRuntimeContainerBadRequest() *GetRuntimeContainerBadRequest {

	return &GetRuntimeContainerBadRequest{}
}

// WithPayload adds the payload to the get runtime container bad request response
func (o *GetRuntimeContainerBadRequest) WithPayload(payload string) *GetRuntimeContainerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get runtime container bad request response
func (o *GetRuntimeContainerBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuntimeContainerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetRuntimeContainerNotFoundCode is the HTTP code returned for type GetRuntimeContainerNotFound
const GetRuntimeContainerNotFoundCode int = 404

/*GetRuntimeContainerNotFound Not found

swagger:response getRuntimeContainerNotFound
*/
type GetRuntimeContainerNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetRuntimeContainerNotFound creates GetRuntimeContainerNotFound with default headers values
func NewGetRuntimeContainerNotFound() *GetRuntimeContainerNotFound {

	return &GetRuntimeContainerNotFound{}
}

// WithPayload adds the payload to the get runtime container not found response
func (o *GetRuntimeContainerNotFound) WithPayload(payload string) *GetRuntimeContainerNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get runtime container not found response
func (o *GetRuntimeContainerNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuntimeContainerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetRuntimeContainerInternalServerErrorCode is the HTTP code returned for type GetRuntimeContainerInternalServerError
const GetRuntimeContainerInternalServerErrorCode int = 500

/*GetRuntimeContainerInternalServerError Internal error

swagger:response getRuntimeContainerInternalServerError
*/
type GetRuntimeContainerInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetRuntimeContainerInternalServerError creates GetRuntimeContainerInternalServerError with default headers values
func NewGetRuntimeContainerInternalServerError() *GetRuntimeContainerInternalServerError {

	return &GetRuntimeContainerInternalServerError{}
}

// WithPayload adds the payload to the get runtime container internal server error response
func (o *GetRuntimeContainerInternalServerError) WithPayload(payload string) *GetRuntimeContainerInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get runtime container internal server error response
func (o *GetRuntimeContainerInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuntimeContainerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
