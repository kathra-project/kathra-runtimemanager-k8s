// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "KATHRA Runtime Environment Management API",
    "title": "Kathra Runtime Environment Manager",
    "version": "1.1.0-SNAPSHOT",
    "x-artifactName": "catalogManager",
    "x-groupId": "org.kathra"
  },
  "basePath": "/api/v1",
  "paths": {
    "/runtimeEnvironments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Environment management"
        ],
        "summary": "Get all RuntimeEnvironments",
        "operationId": "getRuntimeEnvironments",
        "responses": {
          "200": {
            "description": "Return runtimes environments",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeEnvironment"
              }
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Environment management"
        ],
        "summary": "Create RuntimeEnvironment",
        "operationId": "addRuntimeEnvironment",
        "parameters": [
          {
            "x-exportParamName": "RuntimeEnvironment",
            "description": "RuntimeEnvironment to deploy",
            "name": "RuntimeEnvironment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeEnvironment deployed with success",
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironment"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Application management"
        ],
        "summary": "Get RuntimeAppInstance",
        "operationId": "getApplication",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance",
            "schema": {
              "$ref": "#/definitions/RuntimeAppInstance"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Application management"
        ],
        "summary": "Delete application",
        "operationId": "deleteApplication",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance deleted",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}/containers": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Container management"
        ],
        "summary": "Get RuntimeContainer",
        "operationId": "getRuntimeContainer",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeContainer from RuntimeAppInstance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeContainer"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}/containers/{providerIdContainer}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Container management"
        ],
        "summary": "Kill RuntimeContainer",
        "operationId": "deleteRuntimeContainer",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdContainer",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdContainer",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeContainer killed"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}/jobs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Job management"
        ],
        "summary": "Get RuntimeJobs",
        "operationId": "getRuntimeJobs",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeJob from RuntimeAppInstance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeJob"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}/logs": {
      "get": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Logs"
        ],
        "summary": "Get RuntimeAppServices",
        "operationId": "getLogs",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "MaxLines",
            "x-optionalDataType": "String",
            "description": "N latest lines",
            "name": "maxLines",
            "in": "formData"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-exportParamName": "Filters",
            "description": "Regex filters",
            "name": "filters",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppService",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}/services": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Application management"
        ],
        "summary": "Get RuntimeAppServices",
        "operationId": "getRuntimeAppServices",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppService from RuntimeAppInstance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeAppService"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}/volumes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Volume storage management"
        ],
        "summary": "Get RuntimeVolume",
        "operationId": "getRuntimeVolume",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeVolume from RuntimeAppInstance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeVolume"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/loadbalancers": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Load balancer management"
        ],
        "summary": "Get RuntimeAppServices",
        "operationId": "getLoadBalancersFromRuntime",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeLoadBalancer from RuntimeEnvironment",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeHttpLoadBalancer"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Environment management"
        ],
        "summary": "Get RuntimeEnvironment",
        "operationId": "getRuntimeEnvironment",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeEnvironments",
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironment"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Environment management"
        ],
        "summary": "Delete RuntimeEnvironment",
        "operationId": "deleteRuntimeEnvironment",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeEnvironment deleted",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}/applications": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Application management"
        ],
        "summary": "Get application instances from RuntimeEnvironment",
        "operationId": "getApplicationsFromRuntimeEnvironment",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Runtimes environments",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeAppInstance"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Application management"
        ],
        "summary": "Update application to RuntimeEnvironment",
        "operationId": "updateApplicationToRuntimeEnvironment",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "x-exportParamName": "RuntimeAppInstance",
            "description": "RuntimeAppInstance to deploy",
            "name": "RuntimeAppInstance",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuntimeAppInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance deployed with success",
            "schema": {
              "$ref": "#/definitions/RuntimeAppInstance"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Application management"
        ],
        "summary": "Add application to RuntimeEnvironment",
        "operationId": "addApplicationToRuntimeEnvironment",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "x-exportParamName": "RuntimeAppInstance",
            "description": "RuntimeAppInstance to deploy",
            "name": "RuntimeAppInstance",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuntimeAppInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance deployed with success",
            "schema": {
              "$ref": "#/definitions/RuntimeAppInstance"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}/backups": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backup management"
        ],
        "summary": "Get backups from RuntimeEnvironment",
        "operationId": "getBackupRuntimeEnvironments",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Runtimes environments backups",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeEnvironmentBackup"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backup management"
        ],
        "summary": "Create backup from current RuntimeEnvironment",
        "operationId": "addBackupRuntimeEnvironments",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "x-exportParamName": "RuntimeEnvironmentBackup",
            "description": "RuntimeEnvironmentBackup to create",
            "name": "RuntimeEnvironmentBackup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironmentBackup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance deployed with success",
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironmentBackup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}/backups/import": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backup management"
        ],
        "summary": "Import backup archive fromuploaded file or url",
        "operationId": "importBackupRuntimeEnvironments",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "type": "file",
            "x-exportParamName": "File",
            "description": "Backup archive to upload",
            "name": "File",
            "in": "formData"
          },
          {
            "type": "string",
            "x-exportParamName": "Url",
            "x-optionalDataType": "String",
            "description": "Backup archive to download from microservice",
            "name": "Url",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance deployed with success",
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironmentBackup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}/backups/{providerIdBackup}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backup management"
        ],
        "summary": "Delete backup",
        "operationId": "deleteBackupRuntimeEnvironments",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdBackup",
            "description": "RuntimeEnvironmentBackup providerId",
            "name": "providerIdBackup",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance deleted with success",
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironmentBackup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}/backups/{providerIdBackup}/download": {
      "post": {
        "tags": [
          "Backup management"
        ],
        "summary": "Download backup archive",
        "operationId": "downloadBackupRuntimeEnvironments",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdBackup",
            "description": "RuntimeEnvironmentBackup providerId",
            "name": "providerIdBackup",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Backup downloaded with success",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}/backups/{providerIdBackup}/restore": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backup management"
        ],
        "summary": "Restore backup into RuntimeEnvironment",
        "operationId": "restoreBackupRuntimeEnvironments",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdBackup",
            "description": "RuntimeEnvironmentBackup providerId",
            "name": "providerIdBackup",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance restored with success",
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironmentBackup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CatalogEntry": {
      "type": "object",
      "properties": {
        "arguments": {
          "description": "Catalog entry arguments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogEntryArgument"
          }
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "documentation": {
          "description": "Documentation of catalog entry (Markdown)",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "provider": {
          "description": "Provider type",
          "type": "string"
        },
        "providerId": {
          "description": "Uniq identifier generated by provider",
          "type": "string"
        },
        "repository": {
          "description": "Repository reference (URL)",
          "type": "string"
        },
        "version": {
          "description": "Version",
          "type": "string"
        }
      },
      "example": {
        "arguments": [
          {
            "contrainst": ".*",
            "description": "PostgreSQL database (overrides postgresqlDatabase)",
            "key": "global.postgresql.postgresqlDatabase",
            "label": "global.postgresql.postgresqlDatabase",
            "value": "nil"
          },
          {
            "contrainst": ".*",
            "description": "PostgreSQL usernmae (overrides postgresqlUsername)",
            "key": "global.postgresql.postgresqlUsername",
            "label": "global.postgresql.postgresqlUsername",
            "value": "nil"
          }
        ],
        "description": "Chart for PostgreSQL, an object-relational database manag...",
        "documentation": "# PostgreSQL [PostgreSQL](https://www.postgresql.org/) is an object-relational database management system (ORDBMS) with an emphasis on extensibility and on standards-compliance. ## TL;DR; ` + "`" + `` + "`" + `` + "`" + `console $ helm install stable/postgresql ` + "`" + `` + "`" + `` + "`" + ` ## Introduction This chart bootstraps a [PostgreSQL](https://github.com/bitnami/bitnami-docker-postgresql) deployment on a [Kubernetes](http://kubernetes.io) cluster using the [Helm](https://helm.sh) package manager. Bitnami charts can be used with [Kubeapps](https://kubeapps.com/) for deployment and management of Helm Charts in clusters. This chart has been tested to work with NGINX Ingress, cert-manager, fluentd and Prometheus on top of the [BKPR](https://kubeprod.io/). .. .. . ",
        "name": "postgresql",
        "provider": "helm",
        "providerId": "stable/postgresql",
        "repository": "http://harbor.kathra.org/chartrepo",
        "version": "6.5.4"
      }
    },
    "CatalogEntryArgument": {
      "type": "object",
      "properties": {
        "contrainst": {
          "description": "Argument constraint for catalog entry",
          "type": "string"
        },
        "description": {
          "description": "Description argument for catalog entry",
          "type": "string"
        },
        "key": {
          "description": "Argument key for catalog entry",
          "type": "string"
        },
        "label": {
          "description": "Readable argument for catalog entry",
          "type": "string"
        },
        "value": {
          "description": "Argument value for catalog entry",
          "type": "string"
        }
      },
      "example": {
        "contrainst": ".*",
        "description": "PostgreSQL database (overrides postgresqlDatabase)",
        "key": "global.postgresql.postgresqlDatabase",
        "label": "global.postgresql.postgresqlUsername",
        "value": ""
      }
    },
    "RuntimeAppInstance": {
      "type": "object",
      "properties": {
        "catalogEntry": {
          "description": "Catalog reference",
          "$ref": "#/definitions/CatalogEntry"
        },
        "name": {
          "description": "RuntimeAppInstance name",
          "type": "string"
        },
        "parameters": {
          "description": "RuntimeAppInstance setting",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogEntryArgument"
          }
        },
        "providerId": {
          "description": "RuntimeAppInstance providerId",
          "type": "string"
        },
        "status": {
          "description": "RuntimeEnvironment status",
          "type": "string",
          "enum": [
            "DEPLOYED",
            "PENDING",
            "FAILED"
          ]
        }
      },
      "example": [
        {
          "catalogEntry": [
            {
              "providerId": "stable/postgresql"
            }
          ],
          "parameters": [
            {
              "key": "global.postgresql.postgresqlDatabase",
              "value": "myDb"
            },
            {
              "key": "global.postgresql.postgresqlUsername",
              "value": "myUser"
            },
            {
              "key": "global.postgresql.postgresqlPassword",
              "value": "myP@$$w@03d"
            }
          ],
          "providerId": "my-namespace/postgresql",
          "status": "DEPLOYED"
        }
      ]
    },
    "RuntimeAppService": {
      "type": "object",
      "properties": {
        "name": {
          "description": "RuntimeAppService name",
          "type": "string"
        },
        "ports": {
          "description": "Ports exposed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuntimeAppServicePort"
          }
        },
        "providerId": {
          "description": "RuntimeAppService providerId",
          "type": "string"
        },
        "selectors": {
          "description": "RuntimeAppServicePort selectors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuntimeAppServiceSelector"
          }
        }
      },
      "example": {
        "name": "name",
        "ports": [
          {
            "port": "8080",
            "protocol": "TCP",
            "targetPort": "8080"
          },
          {
            "port": "443",
            "protocol": "TCP",
            "targetPort": "443"
          }
        ],
        "providerId": "providerId",
        "selectors": {
          "app": "backend"
        }
      }
    },
    "RuntimeAppServicePort": {
      "type": "object",
      "properties": {
        "port": {
          "description": "Port number",
          "type": "integer"
        },
        "protocol": {
          "description": "Protocol",
          "type": "string"
        },
        "targetPort": {
          "description": "Port number to redirect",
          "type": "string"
        }
      }
    },
    "RuntimeAppServiceSelector": {
      "type": "object",
      "properties": {
        "key": {
          "description": "Key",
          "type": "string"
        },
        "value": {
          "description": "Value",
          "type": "string"
        }
      }
    },
    "RuntimeContainer": {
      "type": "object",
      "properties": {
        "cpuLimit": {
          "description": "RuntimeContainer CPU usage limit",
          "type": "string"
        },
        "image": {
          "description": "RuntimeContainer image",
          "type": "string"
        },
        "imageHash": {
          "description": "RuntimeContainer image hash",
          "type": "string"
        },
        "memoryLimit": {
          "description": "RuntimeContainer Memory usage limit",
          "type": "string"
        },
        "name": {
          "description": "RuntimeContainer name",
          "type": "string"
        },
        "providerId": {
          "description": "RuntimeContainer providerId",
          "type": "string"
        },
        "status": {
          "description": "RuntimeContainer status",
          "type": "string",
          "enum": [
            "CREATING",
            "RUNNING",
            "PAUSED",
            "TERMINATING",
            "EXIT_WITH_SUCCES",
            "EXIT_WITH_ERROR"
          ]
        }
      },
      "example": {
        "cpuLimit": "cpuLimit",
        "image": "image",
        "imageHash": "imageHash",
        "memoryLimit": "memoryLimit",
        "name": "name",
        "providerId": "providerId",
        "status": "CREATING"
      }
    },
    "RuntimeEnvironment": {
      "type": "object",
      "properties": {
        "applications": {
          "description": "Applications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuntimeAppInstance"
          }
        },
        "description": {
          "description": "RuntimeEnvironment description",
          "type": "string"
        },
        "name": {
          "description": "RuntimeEnvironment name",
          "type": "string"
        },
        "providerId": {
          "description": "RuntimeEnvironment providerId",
          "type": "string"
        }
      },
      "example": {
        "applications": [
          {
            "catalogEntry": [
              {
                "providerId": "stable/postgresql"
              }
            ],
            "parameters": [
              {
                "key": "global.postgresql.postgresqlDatabase",
                "value": "myDb"
              },
              {
                "key": "global.postgresql.postgresqlUsername",
                "value": "myUser"
              },
              {
                "key": "global.postgresql.postgresqlPassword",
                "value": "myP@$$w@03d"
              }
            ],
            "providerId": "my-namespace/postgresql",
            "status": "RUNNING"
          }
        ],
        "description": "Namespace's description",
        "name": "my namespace",
        "providerId": "my-namespace"
      }
    },
    "RuntimeEnvironmentBackup": {
      "type": "object",
      "properties": {
        "date": {
          "description": "RuntimeEnvironmentBackup date as timestamp",
          "type": "integer"
        },
        "description": {
          "description": "RuntimeEnvironmentBackup description",
          "type": "string"
        },
        "providerId": {
          "description": "RuntimeEnvironmentBackup providerId",
          "type": "string"
        },
        "runtimeEnvironnement": {
          "description": "RuntimeEnvironment providerId",
          "type": "string"
        },
        "status": {
          "description": "RuntimeEnvironment status",
          "type": "string",
          "enum": [
            "SCHEDULED",
            "PROCESSING",
            "DONE",
            "FAILED"
          ]
        }
      },
      "example": {
        "date": 1575241024,
        "description": "Backup created at 2019-12-01 22:57:04",
        "providerId": "my-namespace/backup-20191201-1",
        "runtimeEnvironnement": "my-namespace",
        "status": "DONE"
      }
    },
    "RuntimeHttpLoadBalancer": {
      "type": "object",
      "properties": {
        "forwardingRules": {
          "description": "Rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuntimeHttpLoadBalancerForwarding"
          }
        },
        "hostname": {
          "description": "Hostname",
          "type": "string"
        },
        "name": {
          "description": "RuntimeLoadBalancer name",
          "type": "string"
        },
        "port": {
          "description": "Incoming port number",
          "type": "integer"
        },
        "providerId": {
          "description": "RuntimeLoadBalancer providerId",
          "type": "string"
        },
        "rewriteUrl": {
          "description": "Rewrite target path",
          "type": "string"
        }
      },
      "example": {
        "forwardingRules": [
          {
            "port": "8080",
            "rule": "/static",
            "service": "frontend"
          },
          {
            "port": "8080",
            "rule": "/static/beta",
            "service": "frontend-experimental"
          },
          {
            "port": "80",
            "rule": "/api",
            "service": "backend"
          },
          {
            "port": "80",
            "rule": "/api/beta",
            "service": "backend-experimental"
          }
        ],
        "hostname": "my-application.kathra.org",
        "name": "my-app",
        "port": "443",
        "providerId": "my-app",
        "rewriteUrl": "/"
      }
    },
    "RuntimeHttpLoadBalancerForwarding": {
      "type": "object",
      "properties": {
        "port": {
          "description": "Port outcoming",
          "type": "string"
        },
        "rule": {
          "description": "Path rule incoming",
          "type": "string"
        },
        "service": {
          "description": "Service outcoming",
          "type": "string"
        }
      }
    },
    "RuntimeJob": {
      "type": "object",
      "properties": {
        "name": {
          "description": "RuntimeJob name",
          "type": "string"
        },
        "providerId": {
          "description": "RuntimeJob providerId",
          "type": "string"
        },
        "status": {
          "description": "RuntimeEnvironment status",
          "type": "string",
          "enum": [
            "SCHEDULED",
            "RUNNING",
            "SUCCESS",
            "FAILED"
          ]
        }
      },
      "example": {
        "name": "name",
        "providerId": "providerId",
        "status": "SCHEDULED"
      }
    },
    "RuntimeVolume": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Volume name",
          "type": "string"
        },
        "providerId": {
          "description": "RuntimeVolume providerId",
          "type": "string"
        },
        "space": {
          "description": "Volume space",
          "type": "string"
        },
        "status": {
          "description": "RuntimeVolume status",
          "type": "string",
          "enum": [
            "PROVISIONING",
            "AVAILABLE",
            "TERMINATING"
          ]
        }
      },
      "example": {
        "name": "name",
        "providerId": "providerId",
        "space": "space",
        "status": "PROVISIONING"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "KATHRA Runtime Environment Management API",
    "title": "Kathra Runtime Environment Manager",
    "version": "1.1.0-SNAPSHOT",
    "x-artifactName": "catalogManager",
    "x-groupId": "org.kathra"
  },
  "basePath": "/api/v1",
  "paths": {
    "/runtimeEnvironments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Environment management"
        ],
        "summary": "Get all RuntimeEnvironments",
        "operationId": "getRuntimeEnvironments",
        "responses": {
          "200": {
            "description": "Return runtimes environments",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeEnvironment"
              }
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Environment management"
        ],
        "summary": "Create RuntimeEnvironment",
        "operationId": "addRuntimeEnvironment",
        "parameters": [
          {
            "x-exportParamName": "RuntimeEnvironment",
            "description": "RuntimeEnvironment to deploy",
            "name": "RuntimeEnvironment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeEnvironment deployed with success",
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironment"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Application management"
        ],
        "summary": "Get RuntimeAppInstance",
        "operationId": "getApplication",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance",
            "schema": {
              "$ref": "#/definitions/RuntimeAppInstance"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Application management"
        ],
        "summary": "Delete application",
        "operationId": "deleteApplication",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance deleted",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}/containers": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Container management"
        ],
        "summary": "Get RuntimeContainer",
        "operationId": "getRuntimeContainer",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeContainer from RuntimeAppInstance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeContainer"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}/containers/{providerIdContainer}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Container management"
        ],
        "summary": "Kill RuntimeContainer",
        "operationId": "deleteRuntimeContainer",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdContainer",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdContainer",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeContainer killed"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}/jobs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Job management"
        ],
        "summary": "Get RuntimeJobs",
        "operationId": "getRuntimeJobs",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeJob from RuntimeAppInstance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeJob"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}/logs": {
      "get": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Logs"
        ],
        "summary": "Get RuntimeAppServices",
        "operationId": "getLogs",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "MaxLines",
            "x-optionalDataType": "String",
            "description": "N latest lines",
            "name": "maxLines",
            "in": "formData"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-exportParamName": "Filters",
            "description": "Regex filters",
            "name": "filters",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppService",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}/services": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Application management"
        ],
        "summary": "Get RuntimeAppServices",
        "operationId": "getRuntimeAppServices",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppService from RuntimeAppInstance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeAppService"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/applications/{providerIdAI}/volumes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Volume storage management"
        ],
        "summary": "Get RuntimeVolume",
        "operationId": "getRuntimeVolume",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdAI",
            "description": "RuntimeAppInstance providerId",
            "name": "providerIdAI",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeVolume from RuntimeAppInstance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeVolume"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerIdRE}/loadbalancers": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Load balancer management"
        ],
        "summary": "Get RuntimeAppServices",
        "operationId": "getLoadBalancersFromRuntime",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderIdRE",
            "description": "RuntimeEnvironment providerId",
            "name": "providerIdRE",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeLoadBalancer from RuntimeEnvironment",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeHttpLoadBalancer"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Environment management"
        ],
        "summary": "Get RuntimeEnvironment",
        "operationId": "getRuntimeEnvironment",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeEnvironments",
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironment"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Environment management"
        ],
        "summary": "Delete RuntimeEnvironment",
        "operationId": "deleteRuntimeEnvironment",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeEnvironment deleted",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}/applications": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Application management"
        ],
        "summary": "Get application instances from RuntimeEnvironment",
        "operationId": "getApplicationsFromRuntimeEnvironment",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Runtimes environments",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeAppInstance"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Application management"
        ],
        "summary": "Update application to RuntimeEnvironment",
        "operationId": "updateApplicationToRuntimeEnvironment",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "x-exportParamName": "RuntimeAppInstance",
            "description": "RuntimeAppInstance to deploy",
            "name": "RuntimeAppInstance",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuntimeAppInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance deployed with success",
            "schema": {
              "$ref": "#/definitions/RuntimeAppInstance"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Application management"
        ],
        "summary": "Add application to RuntimeEnvironment",
        "operationId": "addApplicationToRuntimeEnvironment",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "x-exportParamName": "RuntimeAppInstance",
            "description": "RuntimeAppInstance to deploy",
            "name": "RuntimeAppInstance",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuntimeAppInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance deployed with success",
            "schema": {
              "$ref": "#/definitions/RuntimeAppInstance"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}/backups": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backup management"
        ],
        "summary": "Get backups from RuntimeEnvironment",
        "operationId": "getBackupRuntimeEnvironments",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Runtimes environments backups",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuntimeEnvironmentBackup"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backup management"
        ],
        "summary": "Create backup from current RuntimeEnvironment",
        "operationId": "addBackupRuntimeEnvironments",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "x-exportParamName": "RuntimeEnvironmentBackup",
            "description": "RuntimeEnvironmentBackup to create",
            "name": "RuntimeEnvironmentBackup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironmentBackup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance deployed with success",
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironmentBackup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}/backups/import": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backup management"
        ],
        "summary": "Import backup archive fromuploaded file or url",
        "operationId": "importBackupRuntimeEnvironments",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "type": "file",
            "x-exportParamName": "File",
            "description": "Backup archive to upload",
            "name": "File",
            "in": "formData"
          },
          {
            "type": "string",
            "x-exportParamName": "Url",
            "x-optionalDataType": "String",
            "description": "Backup archive to download from microservice",
            "name": "Url",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance deployed with success",
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironmentBackup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}/backups/{providerIdBackup}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backup management"
        ],
        "summary": "Delete backup",
        "operationId": "deleteBackupRuntimeEnvironments",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdBackup",
            "description": "RuntimeEnvironmentBackup providerId",
            "name": "providerIdBackup",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance deleted with success",
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironmentBackup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}/backups/{providerIdBackup}/download": {
      "post": {
        "tags": [
          "Backup management"
        ],
        "summary": "Download backup archive",
        "operationId": "downloadBackupRuntimeEnvironments",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdBackup",
            "description": "RuntimeEnvironmentBackup providerId",
            "name": "providerIdBackup",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Backup downloaded with success",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/runtimeEnvironments/{providerId}/backups/{providerIdBackup}/restore": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backup management"
        ],
        "summary": "Restore backup into RuntimeEnvironment",
        "operationId": "restoreBackupRuntimeEnvironments",
        "parameters": [
          {
            "type": "string",
            "x-exportParamName": "ProviderId",
            "description": "RuntimeEnvironment providerId",
            "name": "providerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-exportParamName": "ProviderIdBackup",
            "description": "RuntimeEnvironmentBackup providerId",
            "name": "providerIdBackup",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RuntimeAppInstance restored with success",
            "schema": {
              "$ref": "#/definitions/RuntimeEnvironmentBackup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CatalogEntry": {
      "type": "object",
      "properties": {
        "arguments": {
          "description": "Catalog entry arguments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogEntryArgument"
          }
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "documentation": {
          "description": "Documentation of catalog entry (Markdown)",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "provider": {
          "description": "Provider type",
          "type": "string"
        },
        "providerId": {
          "description": "Uniq identifier generated by provider",
          "type": "string"
        },
        "repository": {
          "description": "Repository reference (URL)",
          "type": "string"
        },
        "version": {
          "description": "Version",
          "type": "string"
        }
      },
      "example": {
        "arguments": [
          {
            "contrainst": ".*",
            "description": "PostgreSQL database (overrides postgresqlDatabase)",
            "key": "global.postgresql.postgresqlDatabase",
            "label": "global.postgresql.postgresqlDatabase",
            "value": "nil"
          },
          {
            "contrainst": ".*",
            "description": "PostgreSQL usernmae (overrides postgresqlUsername)",
            "key": "global.postgresql.postgresqlUsername",
            "label": "global.postgresql.postgresqlUsername",
            "value": "nil"
          }
        ],
        "description": "Chart for PostgreSQL, an object-relational database manag...",
        "documentation": "# PostgreSQL [PostgreSQL](https://www.postgresql.org/) is an object-relational database management system (ORDBMS) with an emphasis on extensibility and on standards-compliance. ## TL;DR; ` + "`" + `` + "`" + `` + "`" + `console $ helm install stable/postgresql ` + "`" + `` + "`" + `` + "`" + ` ## Introduction This chart bootstraps a [PostgreSQL](https://github.com/bitnami/bitnami-docker-postgresql) deployment on a [Kubernetes](http://kubernetes.io) cluster using the [Helm](https://helm.sh) package manager. Bitnami charts can be used with [Kubeapps](https://kubeapps.com/) for deployment and management of Helm Charts in clusters. This chart has been tested to work with NGINX Ingress, cert-manager, fluentd and Prometheus on top of the [BKPR](https://kubeprod.io/). .. .. . ",
        "name": "postgresql",
        "provider": "helm",
        "providerId": "stable/postgresql",
        "repository": "http://harbor.kathra.org/chartrepo",
        "version": "6.5.4"
      }
    },
    "CatalogEntryArgument": {
      "type": "object",
      "properties": {
        "contrainst": {
          "description": "Argument constraint for catalog entry",
          "type": "string"
        },
        "description": {
          "description": "Description argument for catalog entry",
          "type": "string"
        },
        "key": {
          "description": "Argument key for catalog entry",
          "type": "string"
        },
        "label": {
          "description": "Readable argument for catalog entry",
          "type": "string"
        },
        "value": {
          "description": "Argument value for catalog entry",
          "type": "string"
        }
      },
      "example": {
        "contrainst": ".*",
        "description": "PostgreSQL database (overrides postgresqlDatabase)",
        "key": "global.postgresql.postgresqlDatabase",
        "label": "global.postgresql.postgresqlUsername",
        "value": ""
      }
    },
    "RuntimeAppInstance": {
      "type": "object",
      "properties": {
        "catalogEntry": {
          "description": "Catalog reference",
          "$ref": "#/definitions/CatalogEntry"
        },
        "name": {
          "description": "RuntimeAppInstance name",
          "type": "string"
        },
        "parameters": {
          "description": "RuntimeAppInstance setting",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogEntryArgument"
          }
        },
        "providerId": {
          "description": "RuntimeAppInstance providerId",
          "type": "string"
        },
        "status": {
          "description": "RuntimeEnvironment status",
          "type": "string",
          "enum": [
            "DEPLOYED",
            "PENDING",
            "FAILED"
          ]
        }
      },
      "example": [
        {
          "catalogEntry": [
            {
              "providerId": "stable/postgresql"
            }
          ],
          "parameters": [
            {
              "key": "global.postgresql.postgresqlDatabase",
              "value": "myDb"
            },
            {
              "key": "global.postgresql.postgresqlUsername",
              "value": "myUser"
            },
            {
              "key": "global.postgresql.postgresqlPassword",
              "value": "myP@$$w@03d"
            }
          ],
          "providerId": "my-namespace/postgresql",
          "status": "DEPLOYED"
        }
      ]
    },
    "RuntimeAppService": {
      "type": "object",
      "properties": {
        "name": {
          "description": "RuntimeAppService name",
          "type": "string"
        },
        "ports": {
          "description": "Ports exposed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuntimeAppServicePort"
          }
        },
        "providerId": {
          "description": "RuntimeAppService providerId",
          "type": "string"
        },
        "selectors": {
          "description": "RuntimeAppServicePort selectors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuntimeAppServiceSelector"
          }
        }
      },
      "example": {
        "name": "name",
        "ports": [
          {
            "port": "8080",
            "protocol": "TCP",
            "targetPort": "8080"
          },
          {
            "port": "443",
            "protocol": "TCP",
            "targetPort": "443"
          }
        ],
        "providerId": "providerId",
        "selectors": {
          "app": "backend"
        }
      }
    },
    "RuntimeAppServicePort": {
      "type": "object",
      "properties": {
        "port": {
          "description": "Port number",
          "type": "integer"
        },
        "protocol": {
          "description": "Protocol",
          "type": "string"
        },
        "targetPort": {
          "description": "Port number to redirect",
          "type": "string"
        }
      }
    },
    "RuntimeAppServiceSelector": {
      "type": "object",
      "properties": {
        "key": {
          "description": "Key",
          "type": "string"
        },
        "value": {
          "description": "Value",
          "type": "string"
        }
      }
    },
    "RuntimeContainer": {
      "type": "object",
      "properties": {
        "cpuLimit": {
          "description": "RuntimeContainer CPU usage limit",
          "type": "string"
        },
        "image": {
          "description": "RuntimeContainer image",
          "type": "string"
        },
        "imageHash": {
          "description": "RuntimeContainer image hash",
          "type": "string"
        },
        "memoryLimit": {
          "description": "RuntimeContainer Memory usage limit",
          "type": "string"
        },
        "name": {
          "description": "RuntimeContainer name",
          "type": "string"
        },
        "providerId": {
          "description": "RuntimeContainer providerId",
          "type": "string"
        },
        "status": {
          "description": "RuntimeContainer status",
          "type": "string",
          "enum": [
            "CREATING",
            "RUNNING",
            "PAUSED",
            "TERMINATING",
            "EXIT_WITH_SUCCES",
            "EXIT_WITH_ERROR"
          ]
        }
      },
      "example": {
        "cpuLimit": "cpuLimit",
        "image": "image",
        "imageHash": "imageHash",
        "memoryLimit": "memoryLimit",
        "name": "name",
        "providerId": "providerId",
        "status": "CREATING"
      }
    },
    "RuntimeEnvironment": {
      "type": "object",
      "properties": {
        "applications": {
          "description": "Applications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuntimeAppInstance"
          }
        },
        "description": {
          "description": "RuntimeEnvironment description",
          "type": "string"
        },
        "name": {
          "description": "RuntimeEnvironment name",
          "type": "string"
        },
        "providerId": {
          "description": "RuntimeEnvironment providerId",
          "type": "string"
        }
      },
      "example": {
        "applications": [
          {
            "catalogEntry": [
              {
                "providerId": "stable/postgresql"
              }
            ],
            "parameters": [
              {
                "key": "global.postgresql.postgresqlDatabase",
                "value": "myDb"
              },
              {
                "key": "global.postgresql.postgresqlUsername",
                "value": "myUser"
              },
              {
                "key": "global.postgresql.postgresqlPassword",
                "value": "myP@$$w@03d"
              }
            ],
            "providerId": "my-namespace/postgresql",
            "status": "RUNNING"
          }
        ],
        "description": "Namespace's description",
        "name": "my namespace",
        "providerId": "my-namespace"
      }
    },
    "RuntimeEnvironmentBackup": {
      "type": "object",
      "properties": {
        "date": {
          "description": "RuntimeEnvironmentBackup date as timestamp",
          "type": "integer"
        },
        "description": {
          "description": "RuntimeEnvironmentBackup description",
          "type": "string"
        },
        "providerId": {
          "description": "RuntimeEnvironmentBackup providerId",
          "type": "string"
        },
        "runtimeEnvironnement": {
          "description": "RuntimeEnvironment providerId",
          "type": "string"
        },
        "status": {
          "description": "RuntimeEnvironment status",
          "type": "string",
          "enum": [
            "SCHEDULED",
            "PROCESSING",
            "DONE",
            "FAILED"
          ]
        }
      },
      "example": {
        "date": 1575241024,
        "description": "Backup created at 2019-12-01 22:57:04",
        "providerId": "my-namespace/backup-20191201-1",
        "runtimeEnvironnement": "my-namespace",
        "status": "DONE"
      }
    },
    "RuntimeHttpLoadBalancer": {
      "type": "object",
      "properties": {
        "forwardingRules": {
          "description": "Rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuntimeHttpLoadBalancerForwarding"
          }
        },
        "hostname": {
          "description": "Hostname",
          "type": "string"
        },
        "name": {
          "description": "RuntimeLoadBalancer name",
          "type": "string"
        },
        "port": {
          "description": "Incoming port number",
          "type": "integer"
        },
        "providerId": {
          "description": "RuntimeLoadBalancer providerId",
          "type": "string"
        },
        "rewriteUrl": {
          "description": "Rewrite target path",
          "type": "string"
        }
      },
      "example": {
        "forwardingRules": [
          {
            "port": "8080",
            "rule": "/static",
            "service": "frontend"
          },
          {
            "port": "8080",
            "rule": "/static/beta",
            "service": "frontend-experimental"
          },
          {
            "port": "80",
            "rule": "/api",
            "service": "backend"
          },
          {
            "port": "80",
            "rule": "/api/beta",
            "service": "backend-experimental"
          }
        ],
        "hostname": "my-application.kathra.org",
        "name": "my-app",
        "port": "443",
        "providerId": "my-app",
        "rewriteUrl": "/"
      }
    },
    "RuntimeHttpLoadBalancerForwarding": {
      "type": "object",
      "properties": {
        "port": {
          "description": "Port outcoming",
          "type": "string"
        },
        "rule": {
          "description": "Path rule incoming",
          "type": "string"
        },
        "service": {
          "description": "Service outcoming",
          "type": "string"
        }
      }
    },
    "RuntimeJob": {
      "type": "object",
      "properties": {
        "name": {
          "description": "RuntimeJob name",
          "type": "string"
        },
        "providerId": {
          "description": "RuntimeJob providerId",
          "type": "string"
        },
        "status": {
          "description": "RuntimeEnvironment status",
          "type": "string",
          "enum": [
            "SCHEDULED",
            "RUNNING",
            "SUCCESS",
            "FAILED"
          ]
        }
      },
      "example": {
        "name": "name",
        "providerId": "providerId",
        "status": "SCHEDULED"
      }
    },
    "RuntimeVolume": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Volume name",
          "type": "string"
        },
        "providerId": {
          "description": "RuntimeVolume providerId",
          "type": "string"
        },
        "space": {
          "description": "Volume space",
          "type": "string"
        },
        "status": {
          "description": "RuntimeVolume status",
          "type": "string",
          "enum": [
            "PROVISIONING",
            "AVAILABLE",
            "TERMINATING"
          ]
        }
      },
      "example": {
        "name": "name",
        "providerId": "providerId",
        "space": "space",
        "status": "PROVISIONING"
      }
    }
  }
}`))
}
