// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RuntimeEnvironmentBackup runtime environment backup
// swagger:model RuntimeEnvironmentBackup
type RuntimeEnvironmentBackup struct {

	// RuntimeEnvironmentBackup date as timestamp
	Date int64 `json:"date,omitempty"`

	// RuntimeEnvironmentBackup description
	Description string `json:"description,omitempty"`

	// RuntimeEnvironmentBackup providerId
	ProviderID string `json:"providerId,omitempty"`

	// RuntimeEnvironment providerId
	RuntimeEnvironnement string `json:"runtimeEnvironnement,omitempty"`

	// RuntimeEnvironment status
	// Enum: [SCHEDULED PROCESSING DONE FAILED]
	Status string `json:"status,omitempty"`
}

// Validate validates this runtime environment backup
func (m *RuntimeEnvironmentBackup) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var runtimeEnvironmentBackupTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SCHEDULED","PROCESSING","DONE","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		runtimeEnvironmentBackupTypeStatusPropEnum = append(runtimeEnvironmentBackupTypeStatusPropEnum, v)
	}
}

const (

	// RuntimeEnvironmentBackupStatusSCHEDULED captures enum value "SCHEDULED"
	RuntimeEnvironmentBackupStatusSCHEDULED string = "SCHEDULED"

	// RuntimeEnvironmentBackupStatusPROCESSING captures enum value "PROCESSING"
	RuntimeEnvironmentBackupStatusPROCESSING string = "PROCESSING"

	// RuntimeEnvironmentBackupStatusDONE captures enum value "DONE"
	RuntimeEnvironmentBackupStatusDONE string = "DONE"

	// RuntimeEnvironmentBackupStatusFAILED captures enum value "FAILED"
	RuntimeEnvironmentBackupStatusFAILED string = "FAILED"
)

// prop value enum
func (m *RuntimeEnvironmentBackup) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, runtimeEnvironmentBackupTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *RuntimeEnvironmentBackup) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RuntimeEnvironmentBackup) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RuntimeEnvironmentBackup) UnmarshalBinary(b []byte) error {
	var res RuntimeEnvironmentBackup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
